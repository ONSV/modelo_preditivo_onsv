---
title: "Tratamento_Dados"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

```{r}
library(microdatasus)
```

```{r}
df_datasus <- fetch_datasus(
  year_start = 1996,
  year_end = 2021,
  information_system = "SIM-DOEXT",
  vars = c("DTOBITO","CAUSABAS")
)
```

```{r}
df_datasus
```

```{r}
st_datasus <- df_datasus |> 
  filter(str_detect(CAUSABAS,paste(paste0("V",seq(0,8,1)),collapse="|"))) |> 
  mutate(
    datas = as.character(DTOBITO),
    ano = as.numeric(str_sub(datas, -4,-1))
  )

st_datasus

```

```{r}
obitos_ano <- st_datasus |> 
  group_by(ano) |> 
  summarise(
    obitos = n()
  )

obitos_ano
```


```{r}
library(obsplot)
ggplot(obitos_ano,aes(x = ano, y = obitos)) +
  geom_point() + geom_line() + #objetos geométricos
  scale_x_continuous(breaks = seq(1996,2021,1)) + scale_y_continuous(limits = c(0,NA)) + #escala
  theme_obs() + theme(axis.text.x = element_text(angle=45,vjust=1,hjust=1)) + #tema
  ggtitle("Mortes por ano DATASUS")
```


```{r}
datatran2007 <- read_csv2("datatran/datatran2007/datatran2007.csv", locale = locale(encoding = "latin1"))
view(datatran2007)
```

```{r}
acidentes2007 <- datatran2007 |> 
  select (
    data_inversa,
    mortos,
    feridos,
    classificacao_acidente
  ) |> 
  mutate(
    ano = as.numeric(str_sub(data_inversa,-4,-1)),
    classificacao_acidente = case_when(
      classificacao_acidente %in% c("(null)","Ignorado") & mortos > 0 ~ "Com Vítimas Fatais",
      classificacao_acidente %in% c("(null)","Ignorado") & mortos == 0 & feridos > 0 ~ "Com Vítimas Feridas",
      classificacao_acidente %in% c("(null)","Ignorado") & mortos == 0 & feridos == 0 ~ "Sem Vítimas",
      TRUE ~ classificacao_acidente
    )
  )

acidentes2007 |> 
  select(
    classificacao_acidente
  ) |> 
  unique()

```

```{r}
mortes2007 <- acidentes2007 |> 
  group_by(ano) |> 
  summarise(
    qnt_acidentes = n(),
    qnt_acidentes_fatais = sum(classificacao_acidente == "Com Vítimas Fatais"),
    qnt_feridos = sum(feridos),
    qnt_mortos = sum(mortos)
    )

mortes2007
```

```{r}
#criação da função

datatran_extract <- function(df) {

  acidentes <- df |> 
  select (
    data_inversa,
    mortos,
    feridos,
    classificacao_acidente
  ) |> 
  mutate(
    
    ano = case_when(
      is.character(data_inversa) ~ year(dmy(data_inversa)),
      !is.character(data_inversa) ~ year(data_inversa)
    ),
    
    classificacao_acidente = case_when(
      classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos > 0 ~ "Com Vítimas Fatais",
      classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos == 0 & feridos > 0 ~ "Com Vítimas Feridas",
      classificacao_acidente %in% c("(null)","Ignorado",NA) & mortos == 0 & feridos == 0 ~ "Sem Vítimas",
      TRUE ~ classificacao_acidente
    )
  )
  
  mortes <- acidentes |> 
  group_by(ano) |> 
  summarise(
    qnt_acidentes = n(),
    qnt_acidentes_fatais = sum(classificacao_acidente == "Com Vítimas Fatais"),
    qnt_feridos = sum(feridos),
    qnt_mortos = sum(mortos)
    )
  
}

#testando a função

testes <- datatran_extract(datatran2007)

testes

```

```{r}
#criação de loop para a importação de todos os anos

k <- seq(2007,2021,1)
enderecos <- print(paste("datatran/datatran",k,"/datatran",k,".csv",sep = ""))

# df_temp1 <- read_csv2(enderecos[1], locale = locale(encoding = "latin1")) |> datatran_extract()


if("datatran_anos" |>  exists()){
  rm("datatran_anos")
}

for(i in enderecos){
  df_temp <- read_csv2(i, locale = locale(encoding = "latin1")) |> datatran_extract()
  if(exists("datatran_anos")){
    datatran_anos <- bind_rows(datatran_anos, df_temp)
  }
  else{
    datatran_anos <- df_temp
  }
}

datatran_anos


```


